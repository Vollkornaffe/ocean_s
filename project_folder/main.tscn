[gd_scene load_steps=10 format=2]

[ext_resource path="res://bin/gdboids.gdns" type="Script" id=1]
[ext_resource path="res://main.gd" type="Script" id=2]
[ext_resource path="res://animations/critter_combined.png" type="Texture" id=3]
[ext_resource path="res://PerfomanceStats.tscn" type="PackedScene" id=4]
[ext_resource path="res://bin/sdf.gdns" type="Script" id=5]
[ext_resource path="res://CameraPosition.gd" type="Script" id=6]
[ext_resource path="res://Selection.tscn" type="PackedScene" id=9]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode blend_mix;
uniform int particles_anim_h_frames;
uniform int particles_anim_v_frames;
uniform bool particles_anim_loop;
varying vec4 instance_custom;
void vertex() {
	float h_frames = float(particles_anim_h_frames);
	float v_frames = float(particles_anim_v_frames);
	VERTEX.xy /= vec2(h_frames, v_frames);
	float particle_total_frames = float(particles_anim_h_frames * particles_anim_v_frames);
	float particle_frame = floor(INSTANCE_CUSTOM.z * float(particle_total_frames));
	if (!particles_anim_loop) {
		particle_frame = clamp(particle_frame, 0.0, particle_total_frames - 1.0);
	} else {
		particle_frame = mod(particle_frame, particle_total_frames);
	}	UV /= vec2(h_frames, v_frames);
	UV += vec2(mod(particle_frame, h_frames) / h_frames, floor(particle_frame / h_frames) / v_frames);
	instance_custom = INSTANCE_CUSTOM;
}

void fragment() {
	float h_frames = float(particles_anim_h_frames);
	float v_frames = float(particles_anim_v_frames);
	COLOR = vec4(0.0,0.0,0.0,0.0);
	vec2 local_coord = vec2(
		mod(UV.x, 1.0/h_frames) * h_frames * 2.0 - 1.0,
		mod(UV.y, 1.0/v_frames) * v_frames * 2.0 - 1.0
	);
	if (instance_custom.x != 0.0) {
		COLOR = vec4(251.0 / 255.0, 242.0 / 255.0, 054.0 / 255.0, 0.5)
			* float(dot(local_coord, local_coord) > 0.8 * 0.8)
			* float(dot(local_coord, local_coord) < 1.0)
			* (abs(mod(TIME, 0.5) - 0.25) + 0.75);
	}
	vec4 tex_color = texture(TEXTURE, UV);
	COLOR = tex_color.a * tex_color + (1.0 - tex_color.a) * COLOR;
}"
custom_defines = ""

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/particles_anim_h_frames = 4
shader_param/particles_anim_v_frames = 3
shader_param/particles_anim_loop = false

[node name="main" type="Node2D"]
script = ExtResource( 2 )

[node name="GUI" type="CanvasLayer" parent="."]

[node name="Control" parent="GUI" instance=ExtResource( 4 )]

[node name="SelectionRect" parent="GUI" instance=ExtResource( 9 )]

[node name="PassiveParticles2D" type="PassiveParticles2D" parent="."]
material = SubResource( 2 )
z_index = 1
amount = 4096
texture = ExtResource( 3 )
scale_amount = 0.5
anim_speed = 1.0

[node name="Polygon2D" type="Polygon2D" parent="."]
color = Color( 0.5, 0.5, 0.5, 1 )
invert_enable = true
polygon = PoolVector2Array( 100, 1900, 559.945, 1791.5, 757.935, 1856.55, 930.47, 1593.51, 1170.89, 1471.89, 1428.27, 1635.93, 1564.04, 1853.72, 1900, 1900, 1660.2, 1392.69, 1795.97, 1344.61, 1487.67, 979.739, 1852.54, 951.455, 1770.51, 702.553, 1900, 100, 1620.61, 201.921, 1436.76, 261.318, 1303.82, 357.484, 1168.06, 184.95, 789.048, 476.278, 797.533, 204.749, 100, 100, 183.764, 399.911, 387.411, 419.71, 319.529, 603.558, 378.926, 824.175, 138.509, 787.406, 203.563, 1189.04, 376.097, 1211.67, 336.499, 971.254, 622.171, 1033.48, 743.793, 903.371, 890.872, 894.886, 800.362, 1200.36, 772.078, 1344.61, 633.484, 1404, 180.936, 1522.8 )
__meta__ = {
"_edit_lock_": true
}

[node name="SDF" type="ReferenceRect" parent="."]
margin_right = 1000.0
margin_bottom = 1000.0
rect_scale = Vector2( 2, 2 )
script = ExtResource( 5 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="GDBoids" type="Node" parent="."]
script = ExtResource( 1 )
boundary_range = 100.0
boundary_force = 200.0
boid/range = 20.0
boid/angle = 360.0
boid/avoid = 50.0
boid/align = 1.0
boid/clump = 50.0
boid/random = 500.0
cell_size = 20.0

[node name="CameraPosition" type="Position2D" parent="."]
position = Vector2( 166.667, 100 )
script = ExtResource( 6 )

[node name="Camera2D" type="Camera2D" parent="CameraPosition"]
current = true
[connection signal="update_selection" from="GUI/SelectionRect" to="." method="_on_SelectionRect_update_selection"]
